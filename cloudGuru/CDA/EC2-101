Elastic Compute Cloud (EC2) --> webservice that allows resizable compute capacity, scale up or down in minutes or instantly.

Part 1 -->
1. EC2 Pricing model --> 
  On Demand --> By the second for linux and by the hour for Windows with no commitment.
  Reserved Instances (RI) --> yearly  or 3 yr basis, pay upfront for that duration
    types:-
      1. Standard RI --> upto 75% sale
      2. Convertible RI's --> upto 54% sale, you can change the attribute of RI, and its use should be equal or greater. 
            like you can change linux OS to Windows OS.
      3. Scheduled RI's --> this can be used at specific time as per need.
  Spot --> rate based on the availability (market demands) at any specific time in specific region. (user bid for EC2 prices)
    >> bid price must be more than spot price, hence user will get that instnace. If spot price goes up then the bid price 
            then AWS terminates the instance.
    > If you terminate the instance before allocated time you will pay for that time duration either way (for example, that hour)
    > If AWS terminate the instance before the allocated time because spot price goes above the bid price, 
        then you get the hour it was terminated in for free.
    > it is used when application is flexible with start and end time.
  
  Dedicated Hosts --> you purchase this yearly or longer duration with specific price with no shared resources.
  
2. Different EC2 Instance types:-
DR Mc GIFT PX ------> 
D --> Dense Storage (Data Warehouse)
R --> Memory (RAM) optimize
M --> (Main / default) General purpose
C --> compute optimize
G --> Graphics Intensive (Game/3D)
I --> I/Ops (High I/O speed storage)
F --> Field Programmable Gate Array (Hardware Acceleration for your code)
T --> Low cost , General purpose
P --> Graphics, General purpose (ML, Blockchain)
X --> extreme memory optimized (SAP/Spark)

Exam Q: In given scenario which EC2 instance would you choose.
A: Need to understand "{DR Mc GIFT PX}" .

Part 2 --> EBS (Elastic Block Size) 
Think of it as Disk on top of CPU. 

It allows you to create storage volume and attach that to EC2 instances.
Below are different activities that you can perform on these volumes:
1. you can create your own file systems
2. run DB
3. etc... any other way you can use block size

EBS are usually placed in AZ and replication and security is guaranted.

** EBS Volume Types:
1. General Purpose SSD (GP2) --> solid state drive
    > balance in price and performance
    > upto 10000 IOPS
    
2. Provisioned IOPs SSD (IO1)
    > designed for I/O intensive applications such as large RDBMS, NoSQL
    > more than 10000 IOPS (upto 20000)
    
Magnetic storage Volume (Harddisk drive)
3. Throughput Optimized HDD (ST1) --> 
    > Big Data
    > Data Warehouse
    > Log Processing
    > They can't be bootable
    > sequnential read/write
    > frequently accesss workload

4. Cold HDD (SC1)
    > Low cost storage
    > file server 
    > They cant be bootable
    
5. Magnetic (Standard) --> same as cold but bootable
    > lowest cost volumes that is bootable
    
** V V Important:
  > you can not mount one EBS volume to multiple EC2 instances, instead use EFS.
  > only bootable volumes (GP2, IO1, magnetic HDD) can be assigned as Root volume.
  
Some important points to remember:
1. subnet = 1. availability zone

Q: what happenes to EBS volume attached to EC2 instance when you terminate the instance?
A: By default it will delete the volume, as delete option is checked by default but we can uncheck it.

Q: What is Volume in EBS?
A: Volume is Disk (SSD or HDD) where we perform different type of storage operations.

Q: What are security groups in EC2?
A: Its a virtual firewall. 

Q: why Ryan was installing apache?
A: to make EC2 instance our webserver, for hosting websites, etc.
    command to install apache ---> yum install httpd -y
    command to update security patches --> sudo yum update 
    command to start apache (server) service --> service httpd start 

While launching EC2 instances we need to know about two important keys.
1. public key: that is stored in AWS. User can have one public key across all EC2 instances. but user can create multiple private key as per need.
2. private key: that is stored by individual user. There should be only one private key per user for specific EC2 instances.

Below command looks like this:
ssh ec2-user@public-Key -i private-key-file
Below is the actual commands:--
ssh ec2-user@##.##.##.## -i my-key-pair.pem 
   or 
sudo ssh ec2-user@##.##.##.## -i my-key-pair.pem 
   or
sudo ssh ec2-user@##.##.##.## -i  /path/my-key-pair.pem 

Difference between system Status check vs Instance Status check
1. System status check: This is to check that instance is reachable and packages are deliving to instances.
2. Instance Status check: this is to check that operating system installed on that instance (server) accepting traffic.

Summary so far (EC2 - labs):
1. By default EC2 instance terminate option is disabled. Need to check that box to enable it.
2. By Default, EBS volume of EC2 instance will be checked for deletion while you terminate your EC2 instance. User can uncheck it if needed.
3. Root volume (default) of EC2 instance can't be encrypted directly. means, EBS Root volume of your default AMI's cant be encrypted.
      For windows need to use third party tools or need to make a copy of the EC2 instance using AMI and encrypt it.
4. Any other added additional volumes can be encrypted by clicking encrypt checkbox.
5. On an EBS backed instance, the default action for the root volume to be deleted when instance terminated.

CLI commands:
1. to login to AWS using terminal
ssh ec2-user@public-key -i private-key-file

2. sudo su --> only if you want to update anything to instances 
yum update -y    <--  then run this command
above command basically updating kernel with all security patches, 

3. yup install httpd -y
above command install apache on EC2 instance. We dont need to do this every time. its just first time when we create new EC2 instance.

4. service https start
above command will start the apache service.

5. chkconfig httpd on
above command will make sure to launch and install apache everytime we start EC2 or reboot EC2.

6. cd var/www/http
this is directory where everything is publically accessible. So for example if we create a website and keep all our pages here. 
That website is then publically accessible.

nano index.html
Above command will create an "index.html" text file, as nano is a text editor api and the type below line into file

<html><h1>Hello Cloud Gurus!</h1></html>

then hit ctrl+x then enter, then yes hit enter.

7. open web browser, place your public ip address and you will be able to see your webpage.

imp points to remeber about security groups:
Security Groups --> This is place where we define what are the ports, and service call that we allow AWS to accept. 
1. Any update or changes happen to security group, apply or affect immidiately.
2. Any rule that you apply to inbound automatically apply to outbound. This is called stateFul.
    Hence, security groups are STATEFUL.
    But Newtork Access Control Groups are STATELESS, this will be covered in VPC section.
3. By default, all inbound traffic is denied, but all outbound traffic is allowed. 
     But we specifically mention in our security rule, what are the traffics that we allow for inbound. 
     We can't specify which one (ip address or protocol) to deny in our rules.
4. you can have any number of EC2 instances within a security groups.
5. you can have multiple security groups attached to an EC2 instances.
6. You can't block any specific IP addresses using security groups, for that you need to use Newtork Access Control lists.
7. you can specify allow rules but not deny rules.

Volumes and Snapshots: Exam Tips (this will bring 4-5 questions in exam)
Volumes exsits on EBS, and its a virtual hard disk.
Snapshots: exists on S3. Its nothing but point in time copy of Volumes.
Snapshots are incremental. means, next time when you take snapshot it will copy only blocks of volume that has chnaged.
1. you can create AMI's from both volumes and snaps.
2. you can change volume size and storage type on the fly, while making copy.
3. Volume should always be in same AZ where EC2 instance is.
4. To move one EC2 instance from one AZ/Region to another, need to create snap or AMI, then copy it to new AZ/Region.

Recommendation for snapshot:
To create a snapshot for EBS volume that servers as root, user should Stop the instance before taking snapshot. 
    However, you can do it without stoping the EC2 instance as well.

Exam Question:- 

Q: How can you copy EBS volume from one AZ to another AZ.
Answer: 
1. first, you need to create snapshot.
2. you need to create an image of that snapshot into needed AZ and you can change the volume type as well.
3. Then attach that to needed EC2 instance.

Q. How can you copy EBS from one region to another??
A. you can copy snapshot and that will allow you to change the region.

Volumes and Snapshots security -- (this will bring 4-5 questions in exam)
1. snapshots of encrypted volumes are encrypted automatically.
2. volumes restored from encrypted snapshots are also encrypted automatically.
3. you can share snapshots but only if they are unencrypted. because encryption key is tied to your account.
4. These snapshots can be shared as public or with other AWS accounts.

points from chapter --> Encrypt root device volume and create AMI from it
scenario 1 -->
1. user can create an snapshot of an unencrypted root volume from EC2 instance and copy it to another region in with encryption.
2. then user can create an AMI (or image) from this snapshot in another region and launch it as EC2 instance.

AMI Types:
>> EBS vs Instance Store
AMI can be selected based on below points:
>> based on Region (Regions and AZs_
>> Operating System 
>> Architecture (32 bit or 64 bit)
>> Launch permissions 
>> Storage or Root Device Volume: have 2 types
    1. Instance Store (Ephemeral Storage)
    2. EBS Backed Volumes

Few points to remember about Instance Store type:
  >> While launching EC2 instance user can attach more Instance Store volumes but not after launching EC2 instnace.
  >> On the contrary, user can attach EBS volume while launching as well as after launching EC2 instance.
  >> Also, Instance Store volumes can be encrypted.
  >> user can't start or stop Instnace store based EC2. But user can only reboot or terminate these kinds of instance.
      If underlying host fails, user will loose data.
  >> User can't even detach Instnace store volume but in case of EBS volume, user can detach from one EC2 and attach to another EC2.
  >> by default, root volume will be deleted if we terminate the instance. But, in case of EBS backed instance we can uncheck the 
        deletion option, but its not possible in case of Ephemeral Storage (Instance Storage)

Elastic File system:
EFS is a file service for EC2, its a block based service. Its elastic in nature mean, you can add or remove files to add or shrink storage.
Features:
1. Supports the Network file system version (NFSv4) protocol
2. you only pay for the storage you use.
3. can scale upto the petabytes.
4. can support thousands of concurrent NFS connections 
5. data is stored across multiple AZs within a region
6. read after write consistency

Multiple EC2 instances connecting to same EFS and accessing same files. EFS is basically storing files centrally.
you can provide access level restrictions to directory and file level.
Hence, Multiple EC2 can connect to one EFS but one EC2 can connect to only one EBS.

AWS CLI using credentials:
on terminal --> ssh ec2-user@public-key -i private-key-file
> sudo su 

once you are in you can use below aws commands to work on different aws services:
1. aws configure
  AWS Access Key ID: from csv file / screen shot that you took
  AWS secrete Access Key: from csv file / screen shot that you took
  Default region Name: provide region that you want
  Default Output format: leave blank and hit enter

2. aws s3 ls --> this command will give list of all buckets 
3. aws s3 help --> this will provide list of commands
4. to check where credentials are stored:
  1. cd ~  to go to home directory
  2. cd .aws --> this is hidden file directory
  3. ls
  4. 
  
5. aws ec2 describe-instances --> will list all available EC2 instnaces.
6. aws ec2 terminate-instances --instance-ids i-03f709gjh79
above command is used to terminate EC2 instance. where "i-03f709gjh79" is intance id that you can get from EC2 instance describe command.
7. aws ec2 describe-images --> all AMI's created by user
8. aws run instances --> to create or run instances
9. aws start instances --instance-ids i-03f709gjh79 --> to start already created instances
10. aws stop instances --instance-ids i-03f709gjh79 --> to stop already created instances

EC2 instances Bash scripting:
1. These are the scripts that run when you initially launch or start your EC2 instance.
2. we can put these commands in the EC2 instance, configuration window, under advance settings.
3. 

Lambda -- its a event driven compute service
Q: what are the currently available blueprints or integrations that can trigger the Lambda function.
A: API Gateway, CloudWatch, CloudFront, AWS IOT, etc...

Imp Poimts:
Every time user sends any request that triggers lambda function, you are going to trigger a new lambda function.

Q: What are the different languages that are supported by Lambda?
A: Java, Python, Node.js, C#

Q: How Lambda is priced?
A: 
Number of requests:-- first 20 million requests are free. After that 20 cents per 1 million requests.
Duration of function run:-- duration calculation is start of the execution of function till the function returns or terminates 
      rounded upto 100 ms, and amount of memory you used during function run. The maximum run time for Lambda function is 5 min.

Lambda Exam Tips:-
1. Lambda scales out (not up) automatically.
2. Lambda functions are independent, 1 event = 1 function
3. Lambda functions can trigger other lambda functions, 1 event can = X lambda functions if functions trigger other functions
4. Lambda is serverless. Its good to know what services are serverless in AWS, like DynamorDB, API Gateway, etc.
5. AWS X-Ray service, can allow you to debug code what is happening. Very helpful incase of Architecture gets complicated.
6. Lambda can operate globally, you can do things like back-up of S3 bucket to another bucket
7. its good to know what services can triggers Lambda functions.

https://github.com/ACloudGuru/S3

lecture --> EC2 Instance metadata and user data
https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html

In this link we will see how to get EC2 instance public IP address through CLI, while we already login to EC2 instance through CLI.
>> curl http://169.254.169.254/latest/meta-data

above command will give us details about different directory related to EC2 instance.

>> curl http://169.254.169.254/latest/meta-data/public-ipv4

above command will provide public ip-address of EC2 instance.

Q: How you will get public-ip address while you logedin to EC2 through CLI.
A: you need to look to meta-data of EC2 using above command and not the user-data.

Elastic Load Balancer -- 
Its a service that spreads the load of traffic, across different webservice.

Instances monitored by ELB are reported as: InService or OutOfService
Need to understnad the Health Check and Unhealty check
ELB has there own DNS name; you will never be given an IP address for ELB 
ELB FAQ is imp for exam.

Q: Below are SDK's available in AWS:
A: 
Android, iOS, JavaScript
JAVA, Node.js, PHP, Python, C++, .net, Ruby, GO

Q: What is Default region in AWS
A: US-EAST-1
some SDK has default region (JAVA)
Some SDK don't have default region (Node.js)

Summary and Exam Tips:
1. Know the difference between different type of EC2 instances 
    On-Demand, Reserved, Spot, Dedicated-Host
Exam question: a scenarion will be given and will ask which of these will suit the scenario and cost efficient.

2. Remember imp for spot instances:
  if you terminate instances than you pay for the hour
  if AWS terminate the instance than you get that for free for that hour

EBS Consisted of:
1. SSD, GP2
2. SSD, IO1
3. HDD, ST1 -- not bootable
4. HDD, SC1 -- not bootable
5. HDD, Magnetic -- bootable

you can not mount one EBS volume to multiple EC2, as compared to EFS.

Termination protection is turned off by default, you must turn it on.
The default action for root EBS volume is to delete when EC2 instance is terminated. Although, we can turn-it off.
Root volumes cant be encrypted by default. you can encrypt root volume by using third party tools
Any other additional volumes can be encrypted

Volumes exsits on EBS, 
Snapshots exist on S3
you can take a snapshot of volume, that will store on S3
Snapshots are point in time copies of volume
snapshots are incremental, this means that next time only the block that has changed is going to move since your last snapshot moved to S3.

EBS vs Instnace Store:

1. Instance Store volume is known as Ephemeral storage
2. Instance Store volumes can not be stopped. If underlying host fails, you will loose data.
3. EBS backed instances, can be stopped. you will not loose your data while doing this.
4. you can reboot both EBS and Instance Store and will not loose your data.
5. By default root volumes will be deleted, on termination. However with EBS volumes, we can configure AWS to keep the EBS volume 
      on instnace termination.
      
Q: How to take the snapshot of RAID array??
Problem: when you take snapshot, the snapshot excludes data held in chache by application or OS. This tends not to matter in 
single volume storage, but for multi-volume of the RAID array, its a problem due to interdependencies of the array.

Solution: Take a application consistent snapshot.
Now how to achieve that:
Stop application from writing to disk.
Flush all cache to disk.

How to achieve above steps:
1. Freeze the file system
2. Unmount the RAID Array
3. Shutting down the associated EC2 instances.


AMI Exam Tips:
AMI's are reginal. 
you can only launch AMI from the region it is stored.
However you can copy AMI from one region to other.

CloudWatch for EC2:
By default standard monitoring is every 5 min
Detailed monitoring 1 min

CloudWatch is for performance monitoring
CloudTrail is for auditing

Q: What are the thing I can do with Cloudwatch?
A: 
Dashboard: for monitoring
Alarms: notify for perticular threshold
Events: responde to state chnages of your AWS resources
Logs: helps in aggregate, monitor and store logs.

ECS stands for Elastic Container Service. It manages running containers on your EC2 instances. It does not act as a scheduler, 
and it is neither serverless nor software that you manage. 
Further information: http://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html
