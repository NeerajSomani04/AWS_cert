S3 (Simple storage Service)
Secure, durable, scalable, object storage.

Object based vs Block Based:
Object based: (S3) means storage for text files, photo files, video files, log files, etc.
Block Based: (EBS - Elastic Block Storage, volumes like HDD, SDD) This is mostly used for OS installation, DB Installation, etc.

S3 basic points to remember:
1. S3 stirage is object based
2. it allows to store files of size 0 bytes to 5 TB.
3. Storage is unlimited. 
4. S3 bucket is nothing but folders, S3 bucket name is globally unique. Means S3 bucket names shoudl be unique across all regions.
5. Whenever we create bucket, AWS creates a DNS for it, which looks like below:
https://s3-region-name.amazonaws.com/bucket_name
for example:-- https://s3-eu-west-1.amazonaws.com/acloudguru
6. Whenever S3 bucket file upload was successfull, user will receive 200 code as successful HTTP upload response.

Data Consistency model for S3:
1. Read after Write consistency for PUT request of new objects
2. Eventually consistent (can take upto few seconds to propogate) for overwrite PUTs and DELETEs. Means for any update or delete request.

Very very important::
Updates in S3 are atomic updates.
Atomic updates: means when ever you update anything on S3, you will either get new data or old data. 
      you will never get partially updated data.

S3 is simple Key, Value store
Key: Object Name
Value: Data, made up of sequence of bytes
Version ID: for versioning
meta-data: data about data
Subresources:
      1. Access control List and bucket policies: it consist of permission details related to files or buckets
      2. Torrent: S3 supports bit-torrent protocols

Some design related scenarios and questions:
Exam Question: how to optimize S3 if we storing files every second, and reading those files.
Answer: As we know S3 stores objects files based on object name and sort them in alphabatical order. 
            So, if we can add some random alphabates at the start of each file, that will help S3 to sort and distribute objects 
            and imporve performance.

---------- important S3 features -----------
S3 tiered storage: 
life cycle management:
versioning:
encryption:
security:

S3 - storage tieres/classes:-
1. S3 standard --> highly durable (11X 9's), highly available (99.99%). concurrent facility fault talarant (2).
2. S3 - IA (Infrequent Access) --> less frequently access but access requires rapid response. concurrent facility fault talarant (2).
3. Reduced Redundency Storage --> durability and availability (99.99%). little less durable in case of system failure. 
          use case screnario: objects which are ok to be lost in case of failure or due to some unknown risk, because data can be lost
          as less redundency. concurrent facility fault talarant (1).
4. Glacier --> very cheap, used for archival only. Need 4-5 hours to retrive.

S3 - pricing:
1. for storage
2. for each access/ update request
3. storage management pricing
4. Data Transfer pricing
5. Transfer Acceleration: its a service that allows users to accelerate speed of there data flowing accross globe with speed using 
      AWS edge location, CloudFront technology.
 
S3 FAQs very important.

S3 Encryption:
1. Client Side Encryption
2. Server Side Encryption
      1. Server Side Encryption with Amazon S3 Managed Keys (SSE-S3)
      2. Server Side Encryption with KMS {Managed Keys/ Key Manages Service} (SSE-KMS)
      3. Server side encryption with customer provided keys (SSE-C)
3. Control Access to Buckets using either ACL (Access Control List) or Bucket policies
4. By default buckets and objects stored in buckets are private.

Important Exam Question:
Q: Static Website hosting name within S3 bucket:
http://bucket-name.s3-website-region-name.amazonaws.com

for example: http://acloudguru.s3-website-us-east-1.amazonaws.com

Q: what exactly you can do with static website hosting.
A: you can only have static html pages. you can't do dynamic website scripting like PHP, .net, etc.


S3 - Cross Origin Resource Sharing (CORS)
as name specified, this is used to access data between different services.
Q: What to do if one Domain Name (DNS) trying to interact with another Domain Name (DNS) and unable to make connection??
A: Enable CORS for the Domain which is trying to iteract.

S3 objects versioning:
1. stores all versions of an objects, including writes and delete
2. great back-up tool
3. once enabled versioning can't be disabled, it only can suspended.
4. Integrate with life cycle rules
5. we can use MFA for deleting an objects.

CDN / CloudFront:
what are 2 options you can choose for CDN:
TTL (Time to Live) --> always in seconds. Also, upto what time you want that content to stay in Edge Location.

Q: How you will make sure only paid customer view your content? How you will make sure to secure your content on CDN?
A: In CDN consol --> Restrict viewer access --> Always use signed cookies or signed URL

Geo-Restricts Options:
we can create Whitelist and Blacklist in cloudFront. 
Whitelist --> allowed contries
Blacklist --> restrcited contries

Invalidation option in CloudFront:
Invalidation basically removes the objects from Edge location cache memory, but it cost money. This is needed when you wants to remove 
objects before TTL time.
for example:, in-case of some important content that got cached at edge location due to some mistake, we can remove them using invalidation.

Very important for exam:
CloudFront can be used for both Download and upload files.

S3 Security and Encryptions:
Security points:
1. By default all newly created buckets are PRIVATE.
2. We can setup buckets security / access controls using below 2 ways:
      Bucket Policies --> these are access controls at bucket level
      Access Control List --> these are access controls at individual objects level. 
3. We can create / configured access logs for S3 buckets. Which basically logs every request made to bucket. This can be saved to another S3 buckets.

Encryptions points:
1. In-Transit --> when you are transfering data to/from S3 bucket.
      > SSL/TLS encryption. (https)
2. At-Rest --> when you encrypt data that is sitting in your buckets.
      > Server Side Encryption --> 
            1. S3 Managed Keys -- SSE-S3:- In this each object is encrypted with unique key, applying strong MFA. 
                  And with addition to this, Amazon additionaly encrypt the key with a master key, and amazon regularly rotate that master key.
                  In this Amazon handles all the keys for you, that is AES-256.
            2. AWS Key Management service - Managed Keys -- SSE-KMS:- It's mostly similar to SSE-S3 but It additionally comes with an 
                        envolop key that protects your data's encryption key. Also, it comes with cloudTrail (Auto Trail) details, means you can 
                        see who is accessing what.
                        
            3. SSE with Customer provided keys -- SSE-C --> customer provides the encryption keys.
            
        > Client Side Encryption --> this is basically where client manage encryption/decreption and upload the data to S3.
        

S3 Storage Gateway --> 
1. This is basically used for back-up purposes. This is an efficient and fast way of backing-up data then coping data directly.
      Once you set this up, you don't need to write code or copy your data manually.
for example:- you basically back-up your data first to storage gateway and then its being replicated to all S3. Lets see how??

4 different types of Storage Gateway:-

1. File Interface --> NFS (Network File System Protocol) --> this is used to access files over a network in a secure way.
        > also consider it as virtual file server, where we are uploading files first using NFS and then AWS will replicate that 
            to S3 using some encryption. Data access, latency and transfer between data center and gateway is 
            fully managed and optimized by AWS.
        > unlimited storage, although file size should not exceed 5 TB. 
2. Volume Interface (New Name) --> iSCSI based block storage
      > Gateway-cached Volumes (old Name) --> use this only for frequently accessed files. 
      > Gateway-stored Volumes (old Name) --> use this to store entire dataset and take back-up asynchronously point in time snapshots 
                  basis. This is used when you need low-latency for your entire dataset.
      
3. Tape Interface --> (New Name) --> iSCSI based virtual Tape storage
      > Gateway-Virtual Tape Library (Old Name)
This is basically used for limitless collection of virtual tapes.
Need to understand difference between Virtual Tape Library and Virtual Tape Shelf
Virtual Tape Library --> backed-up by Amazon S3. Access is immidiate.
Virtual Tape Shelf --> backed-up by amazon Glacier. Need some hours to access these.









