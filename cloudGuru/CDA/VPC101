VPC --> 
  >> virtual Data center on cloud.
  >> consist of IGW (internet Gateways or virtual private gateways), route tables, Network access control lists, subnets, security groups.
  
  1 subnet = 1 AZ
  Security groups are stateful --> means if Inbound is enabled, then outbound is also enabled
  Network Access control List stateless --> In this Inbound or Outbound needs to be enabled seperately

What are the things that we can configure in VPC:
1. Launch instances into a subnet of your choice (by creating custom subnet, with our chioce of IPs)
2. Assign custom IP address range in each subnet
3. configure route tables between subnets
4. create internet gateway and attach it to our VPC. (One Internet Gateway in One VPC, you can't have more than one IG in one VPC)
5. Much better security control over your AWS resources
6. Ec2 instance security groups (can be used across multiple AZ)
7. Subnet Network access control list (ACLS) -- (Inbound or Outbound needs to be enabled seperately)

Difference between Default VPC vs Custom VPC
1. Default VPC allows you to directly attach EC2 instances and deploy. In custom VPC, we need to configure VPC from scratch and then launch our EC2.
2. Default VPC subnets are public in nature. We need to setup any needed private subnet in default VPC.
3. All EC2 instances has both public and private IP address for default VPC.
    for custom VPC with Private Subnet, we will get only private IP address.

VPC peering:- (NO TRANSITIVE PEERING)
Allows you to connect one VPC with another via Direct network route using private IP address.
in one VPC in one subnet in one EC2 instance --> communicate (using private IP add) ---> another VPC in another subnet in another EC2 instances
Instances behaves as they are in same private network.
VPC peering can be done using another AWS account or with other VPCs in same account.
VPC don't do transitive peering. Means one VPC commnicate to other only if they have direct network link. not via some other VPC.

Important point just for AWS understanding purposes:- 
1. same AZ name (example, us-east-1a) within one account could be different AZ in another account but with same AZ name. Hence, AWS randomize
    AZ's within different account to distribute the traffic.

Custom VPC - Lab
  Tenancy --> 
        Default --> means using AWS hardware with sharing feature.
        Dedicated --> means seperate dedicated AWS hardware, not sharing with other customers.
  
  Default things that gets created by default when we create custom VPC -->
        1. route Table
        2. NACL
        3. security groups
        
Some Definitions-->
  Route Table --> specifies how packts are forwarded between the subnets within your VPC, internet and VPN connection.
  Internet Gateway --> is a virtual router that connects a VPC to the internet. 

Exam Tips:
1. The first four IP addresses and the last IP address in each subnet CIDR (Classless Inter-Domain Routing) block are not available for you to use, 
and cannot be assigned to an instance. For example, in a subnet with CIDR block 10.0.0.0/24, 
the following five IP addresses are reserved:
10.0.0.0: Network address.
10.0.0.1: Reserved by AWS for the VPC router.
10.0.0.2: Reserved by AWS. The IP address of the DNS server is always the base of the VPC network range plus two; however, 
we also reserve the base of each subnet range plus two. For VPCs with multiple CIDR blocks, the IP address of the DNS server 
is located in the primary CIDR. For more information, see Amazon DNS Server.
10.0.0.3: Reserved by AWS for future use.
10.0.0.255: Network broadcast address. We do not support broadcast in a VPC, therefore we reserve this address.

Exam Questions:
  >> you can't have multiple IGW (Internet Gateway) attached to one VPC.
  >> security groups are attached to one VPC. security groups can't span across multiple VPCs. Each VPC has one default 
      security group created at VPC launch.
  

NAT Instances --> https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html
   You can use a network address translation (NAT) instance in a public subnet in your VPC to enable instances in the private subnet 
to initiate outbound IPv4 traffic to the Internet or other AWS services, but prevent the instances from receiving inbound traffic 
initiated by someone on the Internet.

On a very high level this is what I understood:-
  1. user can't communicate to internet using private subnet, with disable inbound/outbound traffic.
  2. so NAT instance will allow private subnet to access internet using NAT instance sitting at public subnet.
  3. Internet will get inbound/outbound traffic request/response from NAT instance and then NAT istance will forward that reponse to 
      private subnet as per inbound rule of private subnet.
      
Exam Tips on NAT instances :- (Similar, like EC2 instance but its community available instances)
  >> Disable source/destination check --> 
  Each EC2 instance performs source/destination checks by default. This means that the instance must be the source or destination of 
  any traffic it sends or receives. However, a NAT instance must be able to send and receive traffic when the source or destination 
  is not itself, (as we discussed earlier, NAT instnaces are used to communicate for private subnet instances). Therefore, you must
  disable source/destination checks on the NAT instance.
  >> NAT instnace must be in public subnet and connection between private subnet and NAT instance must be established.
  >> Depending upon the instnace size, it can handle the amount of traffic
  >> High availability NAT instance can be build by auto scaling groups, multiple subnets in different AZs, script to automate failover.
  >> NAT instances runs behind a security groups. All allowed traffic ports must be in security groups.
  >> Bastion servers are supported.

Limitation of NAT Instnaces that can be mitigated by NAT Gateway -->
1. NAT Instnaces are specific to one AZ. Hence, for auto scaling we need to launch multiple NAT Instnaces to connect to multiple AZ.
2. we need to do multi-AZ to make it fault taulerant and auto scaling possible.
3. Limited Network throughput as individual NAT instnace is associated with one AZ only.

Google Search --> NAT Gateway vs NAT Instances
  1. NAT Gateway are also specific to each AZ, but when you configure your route table, failure handle can be done automatically.

NAT Gateways:- mostly used by enterprises because of below benefits
  >> operates on IPv4
  >> must create Elastic IP address for NAT Gateways
  >> scale automatically upto 10Gbps
  >> no need to patch
  >> not associated with security groups
  >> automatically assigned a public IP address
  >> Need to update route table 
  >> no need to disable source/destination checks
  >> more secure than NAT instances
  >> Bastion server not supported
  
Egress-Only Internet Gateway --> 
  >> operates on IPv6 
  

definition of some useful terms:
question 1. Elastic IP address vs public / private IP
Answer:
When you launch an EC2 instance, you recieve a Public IP address by which that instance is reachable in public through internet.
Once you stop that instance and restart then you get a new Public IP for the same instance's.

So, Public IP get's changed everytime for an instance after stop/start.
To overcome with this problem, we attach an Elastic IP to an Instance which doesn't change after you stop / start the instance as 
many times.

Advantage of Having Elastic IP
-> It is kind of static IP for your Instance.
-> Doesn't change after stop/start.

>> If you have Elastic IP in your account and  it's not in use, then you will be charged for it.
>> You can disassociate an Elastic IP address from a resource, and reassociate it with a different resource. Any open connections 
to an instance continue to work for a time even after you disassociate its Elastic IP address and reassociate it with another instance. 
We recommend that you reopen these connections using the reassociated Elastic IP address.
>> A disassociated Elastic IP address remains allocated to your account until you explicitly release it.

2. NAT gateways vs Internet gateways --> https://stackoverflow.com/questions/38690012/aws-vpc-internet-gateway-vs-nat
Internet gateway is used to connect a vpc to the internet and NAT gateway is used to connect the Private subnet to the internet
(which means what ever traffic is coming to private subnet instance which will forward to the NAT gateway). you need to forward the 
traffic in the route table to NAT
Route table 0.0.0.0/0


NACL (Network Access control list) and Security Groups:- 
  >> NACL are stateless, VPC comes with default NACL, and by default it allows outbound / inbound traffic.
  >> but with custom NACL, by default it denies all outbound / inbound traffic. We can explicitely add rules to allow traffic.
  >> each subnet in VPC must associate with a NACL, if user dont do it that subnet will automatically associate with default NACL.
  >> One NACL can have multiple subnets but one subnet can associate with only one NACL at a time.
  >> NACL contains list of rules, Rules in NACL are validated in sort order by Rule number.
  >> block IP address using NACL but not using Security groups.

** Ephemeral port --> short loved TCP / SCTP --> 1024 - 65535

security groups - used for instance level control - do not have outbound rules. they follow a least privilege model, by default 
denying all inbound traffic unless explicitly allowed. once allowed, security groups use stateful filtering to manage traffic 
flow - an inbound connection will have its related outbound traffic allowed automatically.

NACLs - used for subnet level control - Stateless, have both inbound and outbound rules. by default, 
they are configured to allow all traffic at ingress and egress. as NACLs are stateless, if you wish to deny/allow traffic at the NACL layer,
you must explicitly define filters in both the inbound and outbound rules.

The scenarios in your question are both good examples of these differences.

Load Balancer and Custom VPCs:
  >> user must create 2 public subnets inorder to allow application load balancer to work in custom VPCs.

VPC Flow Logs --> created using CloudWatch, used to capture details about incoming and outgoing traffic
    >> this can be configured at 3 levels:
        a. VPC
        b. Subnet
        c. Network Interface Level

Exam Tips for VPC Flow Logs:-
  1. Peer VPC flow logs can't be enable, unless it is in same account
  2. Currently, Tagging in flow log is not available.
  3. Flow log configuration can't be changed after creation. 

Not all IP traffic is monitored:-
  >> Traffic between EC2 instance connection and AWS DNS server is not logged. Although, if user is using their own specific DNS server 
      then traffic is logged.
  >> Traffic generated by Windows instance for amazon windows license activation.
  >> Traffic to and from from 169.254.169.254 for instance metadata.
  >> DHCP traffic
  >> Traffic to the reserved IP address for a default VPC router.

NAT vs Bations :- 
  >> NAT is used to allow internet traffic to EC2 instances in private subnet
  >> Bastion is used to securely administer EC2 instances (using SSH or RDP) in private subnet.
  
VPC End Points: Need to understand it from AWS website.
  >> two types: Interfaces or Gateways

