Elastic Container Service (ECS) --> Server based service
  This container service supports Docker.
  This is used to create and manage a fleet of Docker container on a cluster of EC2 instances.
  
Purpose / Benefits -->
  create distributed application and microservices -->
    microservices --> create application architecture comprised of independent task.
    example, seperate container for different componenet of application -->
      Webserver
      application server
      message queue
      backend servers
    This allows to start, stop, manage, monitor, and scale each container independently
    
    Batch and ETL jobs -->
      package batch and ETL jobs into container and deploy them into EC2 clusters
      run different versions of the same job or multiple jobs on the same cluster
      share cluster capacity with other processes and/or grow jobs dynamically to improve resource utilization
    Continous Integration and Deployment -->

AWS Fargate --> is a way to use container as a fundamental application building block while AWS manages EC2 instance

Dockerfile -->
  A plain text file (script) that contains details (/instructions) about components that are included in container
Container/Docker Image -->
  This is build from Dockerfile, it contains all the downloaded/installed softwares, libraries, code, runtime info, etc specified in Dockerfile.
Container Registry -->
  Its a repository where container image is stored for further reference
  Container Registry can be located at :
    at AWS via ECS, 3rd party repository like Docker Hub, self hosted registry

ECS Agent -->
  This runs on each EC2 instance in the ECS cluster, to make communication between EC2 and ECS.
  ECS also responsible for starting/stoping tasks, resource utilization, etc.
Tasks -->
Task Definition -->
  
  
    
    
  

      
