CodePipeline --> (continous software release process)
continuous delivery service that can model, visualize, and automate your software release process.
CodePipeline basically utilizes all development tools like, codeCommit, codeBuild, CodeDeploy, IAM role to work on these AWS services

  Benefits --> 
      automate release process -- source repository through build, test and deploy
      consistent release process - set of steps to perform for every new changes to perform smooth and continous software release
      Real-time status of process -- view alerts, retry process, etc
  Components --> 
    pipeline --> workflow that describes how changes go through release process
    artifacts --> files or changes that will be worked on by actions and stages
    stages --> pipeline broken into different stages, like build (where code is build and test), deployment (updates deployed to env)
    actions --> stages contains atleast one action, these action applied to artifacts to move as input or output for the process
    transition --> progressing from one stage to another inside of pipeline

CodePipeline using S3 bucket for storing code --> Encrypt S3 at rest -->
  --> There are 2 ways to configure server side encryption for S3 artifacts -->
    --> 1. CodePipeline creates an S3 bucket for artifacts,  and default AWS-managed SSE-KMS encryption keys when you create a pipeline using CodePipeline wizard. The master key is encrypted along with object data and managed by AWS.
    --> 2. you can create and manage your own customer-managed SSE-KMS keys
    
Best Practices for the Jenkins PlugIn -->
    Configure a Separate Amazon EC2 Instance with Jenkins installed and configure an IAM Role for Your EC2 (Jenkins Build Server) to access CodePipeline.
